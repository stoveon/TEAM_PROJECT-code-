<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="goodsVo">
   
   <insert id="insertGoods" parameterType="goodsVo">
      insert into GOODS(NUM, GOODSCODE, GOODSNAME, CONTENT, PRICE, HEART, STOCK) 
      values(GOODS_SEQ.nextval, #{goodsCode}, #{goodsName}, #{content}, #{price}, #{heart}, #{stock})
   </insert>
   
   <update id="updateGoods" parameterType="goodsVo">
      update GOODS 
      set GOODSNAME=#{goodsName}, CONTENT=#{content}, PRICE=#{price}, STOCK=STOCK+#{stock}
      where GOODSCODE=#{goodsCode}
   </update>
   
   <update id="updateGoodsHeart" parameterType="HashMap">
      update GOODS set HEART=#{heart} where GOODSCODE=#{goodsCode}
   </update>
   
   <select id="editGoodsList" resultType="HashMap">
      select GD.GOODSCODE GOODSCODE,GD.GOODSNAME GOODSNAME,GD.REGDATE REGDATE,GD.HEART HEART, 
      GD.STOCK STOCK,nvl(SA.TOTALCNT,0) TOTALCNT from (select * from GOODS where heart != 'DEL') GD left outer join
           (select GOODSCODE, count(GOODSCODE) TOTALCNT from GOODS_SALES group by GOODSCODE) SA
       on GD.GOODSCODE = SA.GOODSCODE 
       order by GD.HEART desc, GD.REGDATE desc
   </select>
   
   <select id="selectGoodsList" parameterType="HashMap" resultType="HashMap">
   select GD.GOODSCODE ,GD.GOODSNAME ,GD.REGDATE ,GD.HEART , GD.PRICE, nvl(FI.SAVENAME, null) SAVENAME 
       from (select * from GOODS where heart != 'DEL') GD left outer join
           (select IMAGE.GOODSCODE , IMAGE.SAVENAME from GOODS_IMAGE IMAGE,
                   (select GOODSCODE, min(NUM) MINI from GOODS_IMAGE group by GOODSCODE) IMSI
             where IMAGE.NUM = IMSI.MINI) FI
         on GD.GOODSCODE = FI.GOODSCODE 
        <if test='type.equals("dateDesc")'>
      order by GD.REGDATE desc, GD.PRICE desc
      </if>
      <if test='type.equals("priceDesc")'>
         order by GD.PRICE desc, GD.REGDATE desc
      </if>
      <if test="type.equals('priceAsc')">
         order by GD.PRICE asc, GD.REGDATE desc
      </if>
   </select>
   
   <select id="selectGoodsOne" parameterType="String" resultType="goodsVo">
      select GOODSCODE, GOODSNAME, CONTENT, PRICE, STOCK from GOODS where GOODSCODE=#{goodsCode}
   </select>
   
   <select id="insertCheck" parameterType="String" resultType="Integer">
      select count(GOODSCODE) from GOODS where GOODSCODE=#{goodsCode}
   </select>
   
   <update id="updateGoodsStock" parameterType="HashMap">
      update GOODS set STOCK=STOCK+#{stock} where GOODSCODE=#{goodsCode}
   </update>
   
   <select id="selectMainLatest" resultType="HashMap">
      select GD.GOODSCODE ,GD.GOODSNAME , GD.PRICE, nvl(FI.SAVENAME, null) SAVENAME 
       from (select ROWNUM, GOODSCODE, GOODSNAME, REGDATE, HEART, PRICE 
            from (select * from GOODS where HEART !='DEL' order by REGDATE desc) 
            where ROWNUM <![CDATA[<=]]> 10) GD left outer join
           (select IMAGE.GOODSCODE , IMAGE.SAVENAME from GOODS_IMAGE IMAGE,
                   (select GOODSCODE, min(NUM) MINI from GOODS_IMAGE group by GOODSCODE) IMSI
             where IMAGE.NUM = IMSI.MINI) FI
         on GD.GOODSCODE = FI.GOODSCODE order by GD.REGDATE desc
   </select>
      
   <select id="selectMainHeart" resultType="HashMap">
      select GD.GOODSCODE ,GD.GOODSNAME , GD.PRICE, nvl(FI.SAVENAME, null) SAVENAME 
       from GOODS GD left outer join
           (select IMAGE.GOODSCODE , IMAGE.SAVENAME from GOODS_IMAGE IMAGE,
                   (select GOODSCODE, min(NUM) MINI from GOODS_IMAGE group by GOODSCODE) IMSI
             where IMAGE.NUM = IMSI.MINI) FI
         on GD.GOODSCODE = FI.GOODSCODE 
        where GD.HEART = 'yes' order by GD.REGDATE desc
   </select>
   
   <update id="stockMinus" parameterType="String">
      update GOODS set STOCK=STOCK-1 where GOODSCODE=#{goodsCode}
   </update>

</mapper>